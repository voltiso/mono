// â €â“¥ 2022     ðŸŒ©    ðŸŒ©     â €   â €
// â €         ðŸŒ© VÍ›oÍ›Í›Í›ltÍ›Í›Í›iÍ›Í›Í›Í›soÍ›Í›Í›.comâ €  â €â €â €

import type { LeafData } from '../../Data'
import type { DeleteIt, IncrementIt, ReplaceIt } from '../../it'

export type UpdatesFromData_Update<T> = unknown extends T
	? unknown
	: object extends Required<T>
	? never
	: T extends LeafData
	? T
	: { [k in keyof T]?: UpdatesFromData<T[k]> }

export type UpdatesFromData<T> =
	| UpdatesFromData_Update<T>
	| ReplaceIt<T>
	| (undefined extends T ? DeleteIt : never)
	| (T extends number ? IncrementIt : never)
