// â €â“¥ 2023     ğŸŒ©    ğŸŒ©     â €   â €
// â €         ğŸŒ© VÍ›oÍ›Í›Í›ltÍ›Í›Í›iÍ›Í›Í›Í›soÍ›Í›Í›.comâ €  â €â €â €

import { lazyConstructor, lazyValue } from '@voltiso/util'

import type { CustomNever, CustomNever$ } from '~'
import { CustomNeverImpl } from '~'

export interface Never extends CustomNever<{}> {}

export interface Never$ extends CustomNever$<{}> {
	get Final(): Never
}

export const Never$ = lazyConstructor(
	() => CustomNeverImpl,
) as unknown as Never$Constructor

//

export type Never$Constructor = new () => Never$

//

export const never = lazyValue(() => new Never$())
