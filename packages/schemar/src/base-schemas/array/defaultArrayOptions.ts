// â €â“¥ 2023     ðŸŒ©    ðŸŒ©     â €   â €
// â €         ðŸŒ© VÍ›oÍ›Í›Í›ltÍ›Í›Í›iÍ›Í›Í›Í›soÍ›Í›Í›.comâ €  â €â €â €

import { $assert } from '@voltiso/util'

import { defaultSchemaOptions } from '~/Schema/options/defaultSchemaOptions'

import { unknown } from '../unknown/Unknown'
import type { ArrayOptions } from './ArrayOptions'

$assert(defaultSchemaOptions)

export const defaultArrayOptions: ArrayOptions.Default = Object.freeze({
	...defaultSchemaOptions,
	Output: 0 as unknown as readonly unknown[],
	Input: 0 as unknown as readonly unknown[],

	isReadonlyArray: false as const,

	element: unknown,
	minLength: undefined,
	maxLength: undefined,
})

export const defaultMutableArrayOptions = Object.freeze({
	...defaultArrayOptions,
	isReadonlyArray: false as const,
})

export const defaultReadonlyArrayOptions = Object.freeze({
	...defaultArrayOptions,
	isReadonlyArray: true as const,
})
