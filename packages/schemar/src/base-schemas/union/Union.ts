// â €â“¥ 2023     ðŸŒ©    ðŸŒ©     â €   â €
// â €         ðŸŒ© VÍ›oÍ›Í›Í›ltÍ›Í›Í›iÍ›Í›Í›Í›soÍ›Í›Í›.comâ €  â €â €â €

import { lazyConstructor } from '@voltiso/util'

import type { $$Schemable, CustomUnion, Type } from '~'

import { UnionImpl } from './_'

export type Union<Ts extends $$Schemable[]> = CustomUnion<{
	schemas: Ts
	Output: Ts extends any ? Type<Ts[number], { kind: 'out' }> : never
	Input: Ts extends any ? Type<Ts[number], { kind: 'in' }> : never
}>

//

export type UnionConstructor = new <Ts extends $$Schemable[]>(
	schemas: Ts,
) => Union<Ts>

//

export const Union = lazyConstructor(
	() => UnionImpl,
) as unknown as UnionConstructor
