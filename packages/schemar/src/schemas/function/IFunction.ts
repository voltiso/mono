// â €â“¥ 2022     ðŸŒ©    ðŸŒ©     â €   â €
// â €         ðŸŒ© VÍ›oÍ›Í›Í›ltÍ›Í›Í›iÍ›Í›Í›Í›soÍ›Í›Í›.comâ €  â €â €â €

import type {
	BASE_OPTIONS,
	DEFAULT_OPTIONS,
	DefaultFunctionOptions,
	FunctionOptions,
	ISchema,
	SCHEMA_NAME,
} from '~'

type AnyFunction = (...args: any) => unknown

export interface IFunction<T extends AnyFunction = AnyFunction>
	extends ISchema<T> {
	//
	readonly [SCHEMA_NAME]: 'Function'

	readonly [BASE_OPTIONS]: FunctionOptions
	readonly [DEFAULT_OPTIONS]: DefaultFunctionOptions

	//

	get getArgumentsSchema(): ISchema
	get getResultSchema(): ISchema
}
