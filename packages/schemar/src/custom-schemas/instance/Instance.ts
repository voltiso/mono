// â €â“¥ 2022     ðŸŒ©    ðŸŒ©     â €   â €
// â €         ðŸŒ© VÍ›oÍ›Í›Í›ltÍ›Í›Í›iÍ›Í›Í›Í›soÍ›Í›Í›.comâ €  â €â €â €

import { $assert } from '@voltiso/assertor'
import type * as t from '@voltiso/schemar.types'
import { lazyConstructor } from '@voltiso/util'

import { InstanceImpl } from '~'

export type Instance<Inst extends object> = t.Instance<Inst>
export const Instance = lazyConstructor(
	() => InstanceImpl,
) as unknown as t.InstanceConstructor

//

export function instance<Inst extends object>(
	Constructor: new (...args: any[]) => Inst,
) {
	$assert(Constructor)
	return new Instance(Constructor)
}
