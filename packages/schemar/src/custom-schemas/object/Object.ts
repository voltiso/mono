// â €â“¥ 2022     ðŸŒ©    ðŸŒ©     â €   â €
// â €         ðŸŒ© VÍ›oÍ›Í›Í›ltÍ›Í›Í›iÍ›Í›Í›Í›soÍ›Í›Í›.comâ €  â €â €â €

/* eslint-disable @typescript-eslint/ban-types */
import { lazyConstructor } from '@voltiso/util'

import type { CustomObject, ObjectType_, InferableObjectLike } from '~'
import { ObjectImpl } from '~'

export type Object<Shape extends InferableObjectLike> = CustomObject<{
	shape: Shape
	Output: ObjectType_<Shape, { kind: 'out' }>
	Input: ObjectType_<Shape, { kind: 'in' }>
}>

export const Object = lazyConstructor(
	() => ObjectImpl,
) as unknown as ObjectConstructor

type ObjectConstructor = new <Shape extends InferableObjectLike>(
	shape: Shape,
) => Object<Shape>
