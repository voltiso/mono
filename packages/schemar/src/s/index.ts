// â €â“¥ 2022     ðŸŒ©    ðŸŒ©     â €   â €
// â €         ðŸŒ© VÍ›oÍ›Í›Í›ltÍ›Í›Í›iÍ›Í›Í›Í›soÍ›Í›Í›.comâ €  â €â €â €

export type { Schema } from './unknownSchema'
export { schema } from './unknownSchema'
// export { schema as default } from './unknownSchema'
// export type { UnknownSchema, IUnknownSchema } from './unknownSchema'

export type { IArray, MutableArray, ReadonlyArray } from './array'
export { array, mutableArray, readonlyArray } from './array'
export { isArray } from './array'
export { bigint } from './bigint'
export { isBigint } from './bigint'
export type { Boolean, IBoolean } from './boolean'
export { boolean } from './boolean'
export { isBoolean } from './boolean'
export type { Function, IFunction } from './function'
export { function } from './function'
export { isFunction } from './function'
export type { IInstance, Instance } from './instance'
export { instance } from './instance'
export { isInstance } from './instance'
export type { ILiteral, Literal } from './literal'
export { literal } from './literal'
export { isLiteral, isUnknownLiteral } from './literal'
export { optional, readonly } from './misc.js'
export type { INever, Never } from './never'
export { never } from './never'
export { isNever } from './never'
export { null } from './null'
export type { INumber, Number } from './number'
export { integer, number } from './number'
export { isNumber } from './number'
export type { IObject, IUnknownObject, Object, UnknownObject } from './object'
export { object } from './object'
export { isObject, isUnknownObject } from './object'
export type { IString, String } from './string'
export { string } from './string'
export { isString } from './string'
export type { ISymbol, Symbol } from './symbol'
export { symbol } from './symbol'
export { isSymbol } from './symbol'
export type { ITuple, MutableTuple, ReadonlyTuple } from './tuple'
export { mutableTuple, readonlyTuple, tuple } from './tuple'
export { isTuple, isUnknownTuple } from './tuple'
export { undefined } from './undefined'
export { union } from './union'
export { isUnion } from './union'
export type { IUnknown, Unknown } from './unknown'
export { unknown } from './unknown'
export { isUnknown } from './unknown'
export type { ValidationResult } from './validation'
export {
	ValidationIssue,
	validationIssue,
	validationResult,
} from './validation'
export type { IVoid, Void } from './void'
export { void } from './void'
export { isVoid } from './void'
