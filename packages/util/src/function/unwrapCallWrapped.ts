// â €â“¥ 2025     ğŸŒ©    ğŸŒ©     â €   â €
// â €         ğŸŒ© VÍ›oÍ›Í›Í›ltÍ›Í›Í›iÍ›Í›Í›Í›soÍ›Í›Í›.comâ €  â €â €â €

export type CallWrapped<T> = () => MaybeCallWrapped<T>
export type MaybeCallWrapped<T> = T | CallWrapped<T>

export function unwrapCallWrapped<T>(maybeCallWrapped: MaybeCallWrapped<T>): T {
	if (typeof maybeCallWrapped === 'function')
		return unwrapCallWrapped((maybeCallWrapped as () => MaybeCallWrapped<T>)())

	return maybeCallWrapped
}
