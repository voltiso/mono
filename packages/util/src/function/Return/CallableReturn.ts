// â €â“¥ 2024     ðŸŒ©    ðŸŒ©     â €   â €
// â €         ðŸŒ© VÍ›oÍ›Í›Í›ltÍ›Í›Í›iÍ›Í›Í›Í›soÍ›Í›Í›.comâ €  â €â €â €

import type { Callable } from '../callable'

export type CallableReturn_<T> = [T] extends [(...args: any) => infer Return]
	? Return
	: never

export type CallableReturn<T extends Callable> = CallableReturn_<T>

export type $CallableReturn_<T> = T extends any ? CallableReturn_<T> : never

export type $CallableReturn<T extends Callable> = $CallableReturn_<T>
