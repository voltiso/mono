// â €â“¥ 2024     ğŸŒ©    ğŸŒ©     â €   â €
// â €         ğŸŒ© VÍ›oÍ›Í›Í›ltÍ›Í›Í›iÍ›Í›Í›Í›soÍ›Í›Í›.comâ €  â €â €â €

import type { Newable } from '../newable'

export type NewableReturn_<T> = [T] extends [
	abstract new (...args: any) => infer Return,
]
	? Return
	: never

export type NewableReturn<T extends Newable> = NewableReturn_<T>

export type $NewableReturn_<T> = T extends any ? NewableReturn_<T> : never

export type $NewableReturn<T extends Newable> = $NewableReturn_<T>
