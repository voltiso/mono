// â €â“¥ 2024     ðŸŒ©    ðŸŒ©     â €   â €
// â €         ðŸŒ© VÍ›oÍ›Í›Í›ltÍ›Í›Í›iÍ›Í›Í›Í›soÍ›Í›Í›.comâ €  â €â €â €

import type { Callable } from '../callable'
import type { Newable } from '../newable'
import type { CallableParameters_ } from './CallableParameters'
import type { NewableParameters_ } from './NewableParameters'

export type Parameters_<T> = [T] extends [Callable]
	? CallableParameters_<T>
	: [T] extends [Newable]
		? NewableParameters_<T>
		: never

export type Parameters<T extends Callable | Newable> = Parameters_<T>

//

export type $Parameters_<T> = T extends any ? Parameters_<T> : never

export type $Parameters<T extends Callable | Newable> = $Parameters_<T>
