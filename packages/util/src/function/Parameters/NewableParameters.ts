// â €â“¥ 2023     ðŸŒ©    ðŸŒ©     â €   â €
// â €         ðŸŒ© VÍ›oÍ›Í›Í›ltÍ›Í›Í›iÍ›Í›Í›Í›soÍ›Í›Í›.comâ €  â €â €â €

import type { Newable } from '../newable'

export type NewableParameters_<T> = [T] extends [
	abstract new (...args: infer Args) => any,
]
	? Args
	: never

export type NewableParameters<T extends Newable> = NewableParameters_<T>

export type $NewableParameters_<T> = T extends any
	? NewableParameters_<T>
	: never

export type $NewableParameters<T extends Newable> = $NewableParameters_<T>
