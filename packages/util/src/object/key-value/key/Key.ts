// â €â“¥ 2022     ðŸŒ©    ðŸŒ©     â €   â €
// â €         ðŸŒ© VÍ›oÍ›Í›Í›ltÍ›Í›Í›iÍ›Í›Í›Í›soÍ›Í›Í›.comâ €  â €â €â €

import type { AlsoAccept } from '../../../type/AlsoAccept.js'
import type { Value } from '../value'

export type Key<
	O extends object,
	V extends Value<O> | AlsoAccept<unknown> = unknown,
> = Key_<O, V>

export type Key_<O, V> = Value<{
	[k in keyof O as O[k] extends V ? k : never]: k
}>
