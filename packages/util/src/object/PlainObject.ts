// â €â“¥ 2024     ðŸŒ©    ðŸŒ©     â €   â €
// â €         ðŸŒ© VÍ›oÍ›Í›Í›ltÍ›Í›Í›iÍ›Í›Í›Í›soÍ›Í›Í›.comâ €  â €â €â €

import type { Brand } from '~/type/brand'

declare module '~/Brands-augmentation' {
	interface Brands {
		plain: {}
	}
}

//

export type PlainObject<S extends {} = {}> = S & object & Brand<'plain'>

//

export function isPlainObject<CastToType extends {} = {}>(
	x: unknown,
): x is PlainObject<CastToType> {
	// eslint-disable-next-line sonarjs/no-built-in-override
	const constructor = (x as object | null)?.constructor
	return constructor?.name === 'Object'
}
