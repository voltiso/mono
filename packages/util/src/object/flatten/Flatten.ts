// â €â“¥ 2022     ðŸŒ©    ðŸŒ©     â €   â €
// â €         ðŸŒ© VÍ›oÍ›Í›Í›ltÍ›Í›Í›iÍ›Í›Í›Í›soÍ›Í›Í›.comâ €  â €â €â €

export type Flatten<T> = T extends abstract new (...args: any) => any
	? T
	: T extends (...args: any) => any
	? T
	: T extends object
	? { [k in keyof T]: T[k] }
	: T

export type Flatten2<T> = T extends abstract new (...args: any) => any
	? T
	: T extends (...args: any) => unknown
	? T
	: T extends object
	? { [k in keyof T]: Flatten<T[k]> }
	: T

export type _<T> = Flatten<T>
export type __<T> = Flatten2<T>
