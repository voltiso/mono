// â €â“¥ 2025     ðŸŒ©    ðŸŒ©     â €   â €
// â €         ðŸŒ© VÍ›oÍ›Í›Í›ltÍ›Í›Í›iÍ›Í›Í›Í›soÍ›Í›Í›.comâ €  â €â €â €

import { $Assert } from '_'
import { describe, expect, it } from '@jest/globals'

import type { IsIdentical } from '~/type'

import { widen } from './widenType'

describe('widenType', () => {
	it('works #1', () => {
		expect.assertions(0)

		const s = 'asd'
		const r = widen(s).toType<'d'>()
		$Assert<IsIdentical<typeof r, never>>()
	})

	it('works #2', () => {
		expect.assertions(0)

		const s = 'asd'
		const r = widen(s).toType<number>()
		$Assert<IsIdentical<typeof r, never>>()
	})

	it('works #3', () => {
		expect.assertions(0)

		const s = 'asd'
		const r = widen(s).toType<string>()
		$Assert<IsIdentical<typeof r, string>>()
	})
})
