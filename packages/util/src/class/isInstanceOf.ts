// â €â“¥ 2022     ðŸŒ©    ðŸŒ©     â €   â €
// â €         ðŸŒ© VÍ›oÍ›Í›Í›ltÍ›Í›Í›iÍ›Í›Í›Í›soÍ›Í›Í›.comâ €  â €â €â €

import type { Instance } from '~'

export function isInstanceOf<
	DerivedInstance extends object,
	BaseConstructor extends abstract new (...args: any[]) => object,
>(
	derived: DerivedInstance,
	Base: BaseConstructor,
): derived is DerivedInstance & Instance<BaseConstructor> {
	while (Base.name.startsWith('lazyConstructor'))
		Base = Object.getPrototypeOf(Base)

	return derived instanceof Base
}
