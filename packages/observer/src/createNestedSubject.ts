// â €â“¥ 2022     ðŸŒ©    ðŸŒ©     â €   â €
// â €         ðŸŒ© VÍ›oÍ›Í›Í›ltÍ›Í›Í›iÍ›Í›Í›Í›soÍ›Í›Í›.comâ €  â €â €â €

import type * as s from '@voltiso/schemar.types'

import type { NestedSubject, NestedSubjectWithSchema } from './NestedSubject'
import { NestedSubjectImpl } from './NestedSubject'

export type ObserverDiContext = {
	schema: s.InferAndSimplifyFunction
}

export const injectCreateNestedSubject =
	(diContext: ObserverDiContext) =>
	<S extends s.Schemable>(
		options: Omit<NestedSubject.RootOptions<S>, 'diContext'>,
	): NestedSubjectWithSchema<S> =>
		new NestedSubjectImpl({ ...options, diContext }) as never
