#pragma once
#include <v/_/_>

#include "v/is/some"

#include <v/ON>

namespace V::get {
INLINE constexpr auto &some(auto &optional) noexcept {
	CHECK(is::some(optional));
	if constexpr (requires { optional.some(); }) {
		return optional.some();
	} else if constexpr (requires { optional.value(); }) {
		// std interop
		return optional.value();
	} else if constexpr (requires { optional.getValue(); }) {
		return optional.getValue();
	} else {
		return optional; // Assume non-Optional values are "some"
	}
}
} // namespace V::get

#include <v/OFF>
