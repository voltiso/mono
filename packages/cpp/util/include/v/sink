#pragma once

#include "v/_/sink.hpp" // IWYU pragma: export

// these may be required for instantiations
#include "v/memo" // IWYU pragma: keep

//

#include "v/owned"
#include "v/subscription"

#include <v/ON>

//

namespace VOLTISO_NAMESPACE {
template <class Listener>
[[nodiscard]] INLINE Owned<Subscription> sink::Base::createLazySubscription(
  this auto &self, Listener &&listener) noexcept(false) {
	return Owned<Subscription>::create(self, std::forward<Listener>(listener));
}
} // namespace VOLTISO_NAMESPACE

namespace VOLTISO_NAMESPACE {
template <class Value>
template <class EagerCallback>
[[nodiscard]] INLINE Owned<EagerSubscription<Value>>
Sink<Value>::createSubscription(
  this auto &self, EagerCallback &&callback) noexcept(false) {
	return Owned<EagerSubscription>::create(
	  self, std::forward<EagerCallback>(callback));
}
} // namespace VOLTISO_NAMESPACE

#include <v/OFF>
