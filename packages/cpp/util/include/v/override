#pragma once
#include <v/_/_>

#include <cstddef>
#include <type_traits>

#define VOLTISO_OVERRIDE_DEFINE_VALUE(NAME, type)                              \
	namespace VOLTISO_NAMESPACE::override {                                      \
	template <type NEW_##NAME, class Base> struct NAME##_ : Base {               \
		static constexpr type NAME = NEW_##NAME;                                   \
	};                                                                           \
	}

#define VOLTISO_OVERRIDE_DEFINE_TYPE(Name)                                     \
	namespace VOLTISO_NAMESPACE::override {                                      \
	template <class New##Name, class Base> struct Name##_ : Base {               \
		using Name = New##Name;                                                    \
	};                                                                           \
	}

VOLTISO_OVERRIDE_DEFINE_TYPE(Item)
VOLTISO_OVERRIDE_DEFINE_TYPE(Type)
VOLTISO_OVERRIDE_DEFINE_TYPE(Brand)
VOLTISO_OVERRIDE_DEFINE_TYPE(Entry)
VOLTISO_OVERRIDE_DEFINE_TYPE(Allocator)

VOLTISO_OVERRIDE_DEFINE_VALUE(NUM_ITEMS, Size)
VOLTISO_OVERRIDE_DEFINE_VALUE(STARTING_INDEX, std::make_signed_t<Size>)
VOLTISO_OVERRIDE_DEFINE_VALUE(IS_WITH_SIZE, bool)
VOLTISO_OVERRIDE_DEFINE_VALUE(IN_PLACE, Size)
