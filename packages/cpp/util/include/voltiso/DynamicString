#pragma once
#include <voltiso/_>

#include "voltiso/DynamicArray"

// template <class H, class TailTuple,
//           typename = std::enable_if_t<std::is_tuple_v<TailTuple>>>
// using TupleWith = decltype(std::tuple_cat(std::declval<std::tuple<H>>(),
//                                           std::declval<TailTuple>()));

namespace VOLTISO_NAMESPACE::dynamicString {
// null-terminated string
template <class Final, class Parameters>
class CustomDynamicString
    : public dynamicArray::Custom<Final,
                                  Parameters::With<parameter::Item<char>>> {
  //
}; // class CustomDynamicString
} // namespace VOLTISO_NAMESPACE::dynamicString
