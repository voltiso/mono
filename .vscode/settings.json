// ⠀ⓥ 2023     🌩    🌩     ⠀   ⠀
// ⠀         🌩 V͛o͛͛͛lt͛͛͛i͛͛͛͛so͛͛͛.com⠀  ⠀⠀⠀

{
	/** --------------------------------------------------------- */
	//
	// Suggested USER settings
	//  - Maybe these shouldn't be here, but in User Settings!
	//  - But - there are project-specific settings here too - see "files.exclude" for "util"
	//

	/** https://2ality.com/2021/06/typescript-esm-nodejs.html */
	// "javascript.preferences.importModuleSpecifierEnding": "js", // Needed for proper esm
	// "typescript.preferences.importModuleSpecifierEnding": "js", // Needed for proper esm
	"javascript.preferences.importModuleSpecifierEnding": "minimal",
	"typescript.preferences.importModuleSpecifierEnding": "minimal",

	"javascript.preferences.importModuleSpecifier": "shortest",
	"typescript.preferences.importModuleSpecifier": "shortest",

	"javascript.preferences.autoImportFileExcludePatterns": ["*/dist/*"],
	"typescript.preferences.autoImportFileExcludePatterns": ["*/dist/*"],

	"typescript.preferences.quoteStyle": "single",
	"javascript.preferences.quoteStyle": "single",

	"typescript.preferences.includePackageJsonAutoImports": "auto",

	// "typeCoverage.strict": true,
	// "typeCoverage.jsEnable": true,

	"files.exclude": {
		// "**/node_modules/": true,
		// "**/dist/": true,
		// "**/.tsc-out/": true,
		// "**/.turbo/": true,
		/**
		 * Util - compat dirs
		 */
		// "**/util/array/": true,
		// "**/util/bdd/": true,
		// "**/util/boolean/": true,
		// "**/util/class/": true,
		// "**/util/clone/": true,
		// "**/util/compiler-options/": true,
		// "**/util/error/": true,
		// "**/util/function/": true,
		// "**/util/null/": true,
		// "**/util/number/": true,
		// "**/util/object/": true,
		// "**/util/parser/": true,
		// "**/util/patch/": true,
		// "**/util/promise/": true,
		// "**/util/set/": true,
		// "**/util/string/": true,
		// "**/util/symbol/": true
	},

	"exportall.config.semis": false,

	/** Allow JSON comments by default */
	"files.associations": {
		"*.json": "jsonc"
	},

	"editor.hover.delay": 200, // Let's be fast

	"editor.formatOnSave": true,
	"files.insertFinalNewline": true,
	"files.trimFinalNewlines": true, // Already handled by eslint

	/**
	 * Does NOT work for JSX currently
	 *  - Use `formulahendry.auto-rename-tag` extension instead
	 */
	"editor.linkedEditing": true,

	"jest.enableCodeLens": false, // Fixes code lines jumps

	// "explorer.experimental.fileNesting.enabled": true,
	// "explorer.experimental.fileNesting.expand": false,

	"better-comments.tags": [
		{
			"tag": "!",
			"color": "#FF2D00",
			"strikethrough": false,
			"underline": false,
			"backgroundColor": "transparent",
			"bold": false,
			"italic": false
		},
		{
			"tag": "?",
			"color": "#3498DB",
			"strikethrough": false,
			"underline": false,
			"backgroundColor": "transparent",
			"bold": false,
			"italic": false
		},
		{
			"tag": "//",
			"color": "#474747",
			"strikethrough": true,
			"underline": false,
			"backgroundColor": "transparent",
			"bold": false,
			"italic": false
		},
		{
			"tag": "todo",
			"color": "#FF8C00",
			"strikethrough": false,
			"underline": false,
			"backgroundColor": "transparent",
			"bold": false,
			"italic": false
		},
		{
			"tag": "*",
			"color": "#98C379",
			"strikethrough": false,
			"underline": false,
			"backgroundColor": "transparent",
			"bold": false,
			"italic": false
		},
		{
			"tag": "⠀",
			"color": "#FF5500aa",
			"strikethrough": false,
			"underline": false,
			"backgroundColor": "#aaddff22",
			"bold": true,
			"italic": false
		}
	],

	// "tag": "⎠ √☁ √ 🗲⎠  𝓥☁ 🗲 √ᘇ𝓦 🗲 ☁ 🌩️ 🗲🌩 ⛈ 🗲  ䷲ ⚡☁ ⓥ V͛o͛͛͛lt͛͛͛i͛͛͛͛so͛͛͛ 🗲 𝙑☁ 𝙫☁ 🗲 🗲☁🗲 www asfdsf 🗲🌩Ѵ 🗲 𝙑 ☁ 𝙫  ѵѴ🗲 ",

	//                        🌩
	//                      🌩    🌩
	// Copyright ⓥ 2022 🌩 V͛o͛͛͛lt͛͛͛i͛͛͛͛so͛͛͛.com
	//

	// V͛͛͛͠͠͠o͛͛͛͛͠͠͠l͛͛͠͠͠t͛͛͠͠͠i͛͛͛͛͠͠͠s͛͛͛͛͛͠͠o͛͛͛͛͠͠

	//

	/** --------------------------------------------------------- */
	// Project-specific settings
	//
	// "eslint.options": { "overrideConfigFile": "./config/eslint.js" },
	"jest.nodeEnv": {
		"NODE_OPTIONS": "--experimental-vm-modules"
	}, // needed for dynamic `import()` in `jest` tests
	"jest.jestCommandLine": "pnpm jest",

	//

	"files.encoding": "utf8",
	"files.eol": "\n",

	"editor.defaultFormatter": "esbenp.prettier-vscode",
	// "prettier.configPath": "./config/dist/cjs/prettier.js",
	// "prettier.enable": true,
	// "prettier.withNodeModules": true,
	// "prettier.enableDebugLogs": true,

	"editor.codeActionsOnSave": {
		"source.fixAll": "explicit",
		"source.fixAll.eslint": "explicit"
	},

	"eslint.codeActionsOnSave.mode": "all", // slower
	// "eslint.codeActionsOnSave.mode": "problems", // faster

	"eslint.workingDirectories": [{ "pattern": "./packages/*/" }, "."],

	"eslint.probe": [
		"javascript",
		"javascriptreact",
		"typescript",
		"typescriptreact",
		"json",
		"jsonc",
		"json5",
		"yaml",
		"toml",
		"properties",
		"ignore",
		"editorconfig",
		"markdown"
	],

	"eslint.validate": [
		"javascript",
		"javascriptreact",
		"typescript",
		"typescriptreact",
		"json",
		"jsonc",
		"json5",
		"yaml",
		"toml",
		"properties",
		"ignore",
		"editorconfig",
		"markdown"
	],

	// "eslint.run": "onSave",
	// "eslint.packageManager": "pnpm",
	"eslint.useESLintClass": true,
	// "eslint.format.enable": true,
	// "eslint.lintTask.enable": true,

	"eslint.execArgv": ["--max_old_space_size=24000"],

	// // Only turn on what's frequently used - better editor responsiveness
	// "eslint.codeActionsOnSave.rules": [
	// 	"prettier/prettier",
	// 	// "import/no-useless-path-segments",
	// 	"@voltiso/no-useless-path-segments",
	// 	"simple-import-sort/imports",
	// 	"@typescript-eslint/consistent-type-imports",
	// 	"import/no-duplicates",
	// 	"n/file-extension-in-import",
	// 	"import/newline-after-import",
	// 	"notice/notice",
	// 	"@typescript-eslint/padding-line-between-statements",
	// 	"simple-import-sort/exports",
	// 	"unused-imports/no-unused-imports",
	// 	"ext/lines-between-object-properties",
	// 	"yml/plain-scalar",
	// 	"object-shorthand",
	// 	"spaced-comment",
	// 	"unicorn/numeric-separators-style",
	// 	"react/jsx-curly-brace-presence",
	// 	"jest-formatting/padding-around-all",
	// 	"no-useless-rename"
	// ],

	"prettier.documentSelectors": [
		"**/.gitignore",
		"**/.npmrc",
		"**/.editorconfig"
	],

	// "jest.jestCommandLine": "node_modules/.bin/jest",
	// "jest.jestCommandLine": "pnpm test",

	"jest.autoRun": "off",
	// "jest.autoRun": { "watch": true },
	// "jest.autoRun": {
	// 	"watch": false,
	// 	"onSave": "test-file"
	// 	// "onSave": "test-src-file"
	// 	// "onStartup": ["all-tests"]
	// },

	"typescript.tsdk": "./node_modules/typescript/lib",
	"typescript.enablePromptUseWorkspaceTsdk": true,

	"debug.javascript.terminalOptions": {
		"skipFiles": ["<node_internals>/**", "**/node_modules/**"]
	},

	"cSpell.words": [
		"anymatch",
		"appendor",
		"artur",
		"atablash",
		"autofix",
		"baloniki",
		"Bartosz",
		"befores",
		"bivariance",
		"bivariant",
		"blackbox",
		"browserslistrc",
		"camelcase",
		"cand",
		"chokidar",
		"chunkname",
		"cjsx",
		"clier",
		"Coderho",
		"compat",
		"concat",
		"cssify",
		"csstype",
		"ctsx",
		"defineproperties",
		"depcheck",
		"depcheckrc",
		"deps",
		"dequal",
		"endswith",
		"eopt",
		"esbuild",
		"espree",
		"estree",
		"execa",
		"extglob",
		"falsish",
		"fastq",
		"fela",
		"fesm",
		"firestore",
		"flowtype",
		"formatjs",
		"fromentries",
		"fsevents",
		"getownpropertydescriptor",
		"getownpropertydescriptors",
		"getownpropertynames",
		"getownpropertysymbols",
		"gitignores",
		"globby",
		"hashbang",
		"iife",
		"immutabilize",
		"Inferables",
		"iojs",
		"isexe",
		"isinteger",
		"isnan",
		"joycon",
		"jsdom",
		"Jsons",
		"LGBTQ",
		"lilconfig",
		"linebreak",
		"localstore",
		"loglevel",
		"lookaround",
		"Lorcan",
		"matchall",
		"Methodish",
		"microtask",
		"milahu",
		"minimatch",
		"mjsx",
		"mtsx",
		"multilines",
		"mutables",
		"Nagashima",
		"nala",
		"newables",
		"nocheck",
		"nodelib",
		"nodenext",
		"nonblock",
		"npmjs",
		"npmrc",
		"oltiso",
		"Orta",
		"outfile",
		"Parens",
		"Paulo",
		"picomatch",
		"pkill",
		"plusplus",
		"pnpm",
		"Podgruszecki",
		"postcss",
		"prebuild",
		"predeploy",
		"prettierrc",
		"readdirp",
		"realpath",
		"reusify",
		"rimraf",
		"riscv",
		"rollup",
		"rushstack",
		"scandir",
		"Schemable",
		"Schemables",
		"schemar",
		"sdkconfig",
		"setstate",
		"sharereplay",
		"shrc",
		"Simplifiable",
		"sonarjs",
		"startswith",
		"stester",
		"stylis",
		"subclassing",
		"subdir",
		"sunos",
		"superjson",
		"switchmap",
		"syncer",
		"syncpack",
		"takeuntil",
		"takewhile",
		"testid",
		"textnodes",
		"thenify",
		"topromise",
		"Toru",
		"tradeshow",
		"transpiling",
		"treeshake",
		"tsclint",
		"tsdoc",
		"TSES",
		"tsup",
		"ttsc",
		"ttypescript",
		"Turborepo",
		"typecov",
		"typeof",
		"unflush",
		"unist",
		"Unitless",
		"V͛o͛",
		"voltiso",
		"whitespaces",
		"wrappy",
		"Zonejs"
	]
}
